/****************************************************************************
**
** Namespace XGXLib generated by dumpcpp v5.13.1 using
** D:\software\qt_5_13_1\5.13.1\msvc2017_64\bin\dumpcpp.exe {241AC984-B8D3-4F78-B56F-B6B5268DF8F7}
** from the type library C:\Windows\SysWow64\XGXCTL.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_XGXLIB_H
#define QAX_DUMPCPP_XGXLIB_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef XGXLIB_EXPORT
#define XGXLIB_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace XGXLib {


class XGXLIB_EXPORT _DXGX : public QAxObject
{
public:
    _DXGX(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Address

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline QString Address() const; //Returns the value of Address
    inline void SetAddress(const QString& value); //Sets the value of the Address property

    /*
    Property CommandBusy

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool CommandBusy() const; //Returns the value of CommandBusy

    /*
    Property Connected

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool Connected() const; //Returns the value of Connected

    /*
    Property ConnectionType

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int ConnectionType() const; //Returns the value of ConnectionType
    inline void SetConnectionType(int value); //Sets the value of the ConnectionType property

    /*
    Property EnableRemoteConsole

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool EnableRemoteConsole() const; //Returns the value of EnableRemoteConsole
    inline void SetEnableRemoteConsole(bool value); //Sets the value of the EnableRemoteConsole property

    /*
    Property FileTransferBusy

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool FileTransferBusy() const; //Returns the value of FileTransferBusy

    /*
    Property HistoryLogStarted

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool HistoryLogStarted() const; //Returns the value of HistoryLogStarted

    /*
    Property HistoryTransferBusy

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool HistoryTransferBusy() const; //Returns the value of HistoryTransferBusy

    /*
    Property ImageLogStarted

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool ImageLogStarted() const; //Returns the value of ImageLogStarted

    /*
    Property Port

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int Port() const; //Returns the value of Port
    inline void SetPort(int value); //Sets the value of the Port property

    /*
    Property RemoteDesktopStarted

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool RemoteDesktopStarted() const; //Returns the value of RemoteDesktopStarted

    /*
    Property RemoteJoypad0

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad0() const; //Returns the value of RemoteJoypad0
    inline void SetRemoteJoypad0(int value); //Sets the value of the RemoteJoypad0 property

    /*
    Property RemoteJoypad1

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad1() const; //Returns the value of RemoteJoypad1
    inline void SetRemoteJoypad1(int value); //Sets the value of the RemoteJoypad1 property

    /*
    Property RemoteJoypad2

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad2() const; //Returns the value of RemoteJoypad2
    inline void SetRemoteJoypad2(int value); //Sets the value of the RemoteJoypad2 property

    /*
    Property RemoteJoypad3

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad3() const; //Returns the value of RemoteJoypad3
    inline void SetRemoteJoypad3(int value); //Sets the value of the RemoteJoypad3 property

    /*
    Property RemoteJoypad4

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad4() const; //Returns the value of RemoteJoypad4
    inline void SetRemoteJoypad4(int value); //Sets the value of the RemoteJoypad4 property

    /*
    Property RemoteJoypad5

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad5() const; //Returns the value of RemoteJoypad5
    inline void SetRemoteJoypad5(int value); //Sets the value of the RemoteJoypad5 property

    /*
    Property RemoteJoypad6

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad6() const; //Returns the value of RemoteJoypad6
    inline void SetRemoteJoypad6(int value); //Sets the value of the RemoteJoypad6 property

    /*
    Property RemoteJoypad7

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad7() const; //Returns the value of RemoteJoypad7
    inline void SetRemoteJoypad7(int value); //Sets the value of the RemoteJoypad7 property

    /*
    Property RemoteJoypad8

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad8() const; //Returns the value of RemoteJoypad8
    inline void SetRemoteJoypad8(int value); //Sets the value of the RemoteJoypad8 property

    /*
    Property RemoteKey0

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey0() const; //Returns the value of RemoteKey0
    inline void SetRemoteKey0(int value); //Sets the value of the RemoteKey0 property

    /*
    Property RemoteKey1

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey1() const; //Returns the value of RemoteKey1
    inline void SetRemoteKey1(int value); //Sets the value of the RemoteKey1 property

    /*
    Property RemoteKey2

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey2() const; //Returns the value of RemoteKey2
    inline void SetRemoteKey2(int value); //Sets the value of the RemoteKey2 property

    /*
    Property RemoteKey3

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey3() const; //Returns the value of RemoteKey3
    inline void SetRemoteKey3(int value); //Sets the value of the RemoteKey3 property

    /*
    Property RemoteKey4

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey4() const; //Returns the value of RemoteKey4
    inline void SetRemoteKey4(int value); //Sets the value of the RemoteKey4 property

    /*
    Property RemoteKey5

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey5() const; //Returns the value of RemoteKey5
    inline void SetRemoteKey5(int value); //Sets the value of the RemoteKey5 property

    /*
    Property RemoteKey6

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey6() const; //Returns the value of RemoteKey6
    inline void SetRemoteKey6(int value); //Sets the value of the RemoteKey6 property

    /*
    Property RemoteKey7

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey7() const; //Returns the value of RemoteKey7
    inline void SetRemoteKey7(int value); //Sets the value of the RemoteKey7 property

    /*
    Property RemoteKey8

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey8() const; //Returns the value of RemoteKey8
    inline void SetRemoteKey8(int value); //Sets the value of the RemoteKey8 property

    /*
    Property ResultLogStarted

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool ResultLogStarted() const; //Returns the value of ResultLogStarted

    /*
    Property SettingTransferBusy

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool SettingTransferBusy() const; //Returns the value of SettingTransferBusy

    /*
    Property Version

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline QString Version() const; //Returns the value of Version

    /*
    Method AboutBox

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline void AboutBox();

    /*
    Method CaptureRemoteDesktop

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int CaptureRemoteDesktop(const QString& dstFile);

    /*
    Method ClearRemoteDesktop

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline void ClearRemoteDesktop();

    /*
    Method Connect

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int Connect();

    /*
    Method DeleteFile

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DeleteFile(const QString& dstFile);

    /*
    Method Disconnect

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline void Disconnect();

    /*
    Method DownloadBinary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadBinary(int driveNo, int settingNo, const QString& dstPath);

    /*
    Method DownloadDictionary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadDictionary(int driveNo, int settingNo, int dicNo, const QString& dstFile);

    /*
    Method DownloadEnvironment

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadEnvironment(const QString& dstFile);

    /*
    Method DownloadFile

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadFile(const QString& srcFile, const QString& dstFile);

    /*
    Method DownloadGlobalDictionary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadGlobalDictionary(int dicNo, const QString& dstFile);

    /*
    Method DownloadGlobalVariable

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadGlobalVariable(const QString& dstFile);

    /*
    Method DownloadInspect

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadInspect(int driveNo, int settingNo, const QString& dstFile);

    /*
    Method DownloadRecipe

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadRecipe(int driveNo, int settingNo, int recipeNo, const QString& dstFile);

    /*
    Method DownloadRegImage

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadRegImage(int driveNo, int settingNo, int cameraNo, int imageNo, const QString& dstFile);

    /*
    Method ExecuteCommand

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int ExecuteCommand(const QString& command, QString& response);

    /*
    Method ExecuteCommandAsync

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int ExecuteCommandAsync(const QString& command);

    /*
    Method GetDictionaryInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetDictionaryInfo(int index, int& dicNo);

    /*
    Method GetDictionaryList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetDictionaryList(int driveNo, int settingNo, int& num);

    /*
    Method GetFileInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetFileInfo(int index, QString& name, int& kind, int& attribute, QDateTime& date, int& size);

    /*
    Method GetFileList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetFileList(const QString& folder, int& num);

    /*
    Method GetGlobalDictionaryList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetGlobalDictionaryList(int& num);

    /*
    Method GetHistoryImage

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetHistoryImage(int conditionNo, int prcCount, const QString& varName, const QString& dstFile, int format);

    /*
    Method GetHistoryInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetHistoryInfo(int index, int& prcCount, QDateTime& date, int& isSavedDrive, int& isSavedComm);

    /*
    Method GetHistoryList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetHistoryList(int conditionNo, int& num);

    /*
    Method GetHistoryResult

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetHistoryResult(int conditionNo, int prcCount, const QString& dstFile);

    /*
    Method GetInspectInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetInspectInfo(int index, int& driveNo, int& settingNo, QString& name);

    /*
    Method GetInspectList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetInspectList(int& num);

    /*
    Method GetRecipeInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetRecipeInfo(int recipeIndex, int& recipeNo, QString& recipeName);

    /*
    Method GetRecipeList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetRecipeList(int driveNo, int settingNo, int& recipeNum);

    /*
    Method GetRegImageInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetRegImageInfo(int index, int& imageNo);

    /*
    Method GetRegImageList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetRegImageList(int driveNo, int settingNo, int cameraNo, int& num);

    /*
    Method GetResultLogData

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetResultLogData(int itemNo, int arrayNo, int memberNo, QString& text, double& data);

    /*
    Method Initialize

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int Initialize();

    /*
    Method SetResultLogUnit

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int SetResultLogUnit(int unitId);

    /*
    Method StartHistoryLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StartHistoryLog(const QString& folder);

    /*
    Method StartImageLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StartImageLog(const QString& folder);

    /*
    Method StartRemoteDesktop

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StartRemoteDesktop(int mode);

    /*
    Method StartResultLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StartResultLog(int mode, const QString& folder);

    /*
    Method StopHistoryLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StopHistoryLog();

    /*
    Method StopImageLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StopImageLog();

    /*
    Method StopRemoteDesktop

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StopRemoteDesktop();

    /*
    Method StopResultLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StopResultLog();

    /*
    Method UpdateRemoteDesktop

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UpdateRemoteDesktop();

    /*
    Method UploadBinary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadBinary(int driveNo, int settingNo, const QString& srcPath);

    /*
    Method UploadDictionary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadDictionary(int driveNo, int settingNo, int dicNo, const QString& srcFile);

    /*
    Method UploadEnvironment

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadEnvironment(const QString& srcFile);

    /*
    Method UploadFile

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadFile(const QString& srcFile, const QString& dstFile);

    /*
    Method UploadGlobalDictionary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadGlobalDictionary(int dicNo, const QString& srcFile);

    /*
    Method UploadGlobalVariable

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadGlobalVariable(const QString& srcFile, int overwriteMode);

    /*
    Method UploadInspect

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadInspect(int driveNo, int settingNo, const QString& srcFile, int overwriteMode);

    /*
    Method UploadRecipe

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadRecipe(int driveNo, int settingNo, int recipeNo, const QString& srcFile, int overwriteMode);

    /*
    Method UploadRegImage

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadRegImage(int driveNo, int settingNo, int cameraNo, int imageNo, const QString& srcFile);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface _DXGXEvents

// Actual coclasses
class XGXLIB_EXPORT XGX : public QAxWidget
{
public:
    XGX(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl(QStringLiteral("{a57d7ebc-d141-4c6c-a740-561fbb318e04}"));
    }

    /*
    Property Address

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline QString Address() const; //Returns the value of Address
    inline void SetAddress(const QString& value); //Sets the value of the Address property

    /*
    Property CommandBusy

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool CommandBusy() const; //Returns the value of CommandBusy

    /*
    Property Connected

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool Connected() const; //Returns the value of Connected

    /*
    Property ConnectionType

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int ConnectionType() const; //Returns the value of ConnectionType
    inline void SetConnectionType(int value); //Sets the value of the ConnectionType property

    /*
    Property EnableRemoteConsole

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool EnableRemoteConsole() const; //Returns the value of EnableRemoteConsole
    inline void SetEnableRemoteConsole(bool value); //Sets the value of the EnableRemoteConsole property

    /*
    Property FileTransferBusy

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool FileTransferBusy() const; //Returns the value of FileTransferBusy

    /*
    Property HistoryLogStarted

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool HistoryLogStarted() const; //Returns the value of HistoryLogStarted

    /*
    Property HistoryTransferBusy

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool HistoryTransferBusy() const; //Returns the value of HistoryTransferBusy

    /*
    Property ImageLogStarted

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool ImageLogStarted() const; //Returns the value of ImageLogStarted

    /*
    Property Port

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int Port() const; //Returns the value of Port
    inline void SetPort(int value); //Sets the value of the Port property

    /*
    Property RemoteDesktopStarted

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool RemoteDesktopStarted() const; //Returns the value of RemoteDesktopStarted

    /*
    Property RemoteJoypad0

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad0() const; //Returns the value of RemoteJoypad0
    inline void SetRemoteJoypad0(int value); //Sets the value of the RemoteJoypad0 property

    /*
    Property RemoteJoypad1

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad1() const; //Returns the value of RemoteJoypad1
    inline void SetRemoteJoypad1(int value); //Sets the value of the RemoteJoypad1 property

    /*
    Property RemoteJoypad2

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad2() const; //Returns the value of RemoteJoypad2
    inline void SetRemoteJoypad2(int value); //Sets the value of the RemoteJoypad2 property

    /*
    Property RemoteJoypad3

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad3() const; //Returns the value of RemoteJoypad3
    inline void SetRemoteJoypad3(int value); //Sets the value of the RemoteJoypad3 property

    /*
    Property RemoteJoypad4

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad4() const; //Returns the value of RemoteJoypad4
    inline void SetRemoteJoypad4(int value); //Sets the value of the RemoteJoypad4 property

    /*
    Property RemoteJoypad5

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad5() const; //Returns the value of RemoteJoypad5
    inline void SetRemoteJoypad5(int value); //Sets the value of the RemoteJoypad5 property

    /*
    Property RemoteJoypad6

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad6() const; //Returns the value of RemoteJoypad6
    inline void SetRemoteJoypad6(int value); //Sets the value of the RemoteJoypad6 property

    /*
    Property RemoteJoypad7

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad7() const; //Returns the value of RemoteJoypad7
    inline void SetRemoteJoypad7(int value); //Sets the value of the RemoteJoypad7 property

    /*
    Property RemoteJoypad8

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteJoypad8() const; //Returns the value of RemoteJoypad8
    inline void SetRemoteJoypad8(int value); //Sets the value of the RemoteJoypad8 property

    /*
    Property RemoteKey0

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey0() const; //Returns the value of RemoteKey0
    inline void SetRemoteKey0(int value); //Sets the value of the RemoteKey0 property

    /*
    Property RemoteKey1

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey1() const; //Returns the value of RemoteKey1
    inline void SetRemoteKey1(int value); //Sets the value of the RemoteKey1 property

    /*
    Property RemoteKey2

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey2() const; //Returns the value of RemoteKey2
    inline void SetRemoteKey2(int value); //Sets the value of the RemoteKey2 property

    /*
    Property RemoteKey3

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey3() const; //Returns the value of RemoteKey3
    inline void SetRemoteKey3(int value); //Sets the value of the RemoteKey3 property

    /*
    Property RemoteKey4

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey4() const; //Returns the value of RemoteKey4
    inline void SetRemoteKey4(int value); //Sets the value of the RemoteKey4 property

    /*
    Property RemoteKey5

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey5() const; //Returns the value of RemoteKey5
    inline void SetRemoteKey5(int value); //Sets the value of the RemoteKey5 property

    /*
    Property RemoteKey6

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey6() const; //Returns the value of RemoteKey6
    inline void SetRemoteKey6(int value); //Sets the value of the RemoteKey6 property

    /*
    Property RemoteKey7

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey7() const; //Returns the value of RemoteKey7
    inline void SetRemoteKey7(int value); //Sets the value of the RemoteKey7 property

    /*
    Property RemoteKey8

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int RemoteKey8() const; //Returns the value of RemoteKey8
    inline void SetRemoteKey8(int value); //Sets the value of the RemoteKey8 property

    /*
    Property ResultLogStarted

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool ResultLogStarted() const; //Returns the value of ResultLogStarted

    /*
    Property SettingTransferBusy

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline bool SettingTransferBusy() const; //Returns the value of SettingTransferBusy

    /*
    Property Version

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline QString Version() const; //Returns the value of Version

    /*
    Method AboutBox

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline void AboutBox();

    /*
    Method CaptureRemoteDesktop

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int CaptureRemoteDesktop(const QString& dstFile);

    /*
    Method ClearRemoteDesktop

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline void ClearRemoteDesktop();

    /*
    Method Connect

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int Connect();

    /*
    Method DeleteFile

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DeleteFile(const QString& dstFile);

    /*
    Method Disconnect

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline void Disconnect();

    /*
    Method DownloadBinary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadBinary(int driveNo, int settingNo, const QString& dstPath);

    /*
    Method DownloadDictionary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadDictionary(int driveNo, int settingNo, int dicNo, const QString& dstFile);

    /*
    Method DownloadEnvironment

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadEnvironment(const QString& dstFile);

    /*
    Method DownloadFile

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadFile(const QString& srcFile, const QString& dstFile);

    /*
    Method DownloadGlobalDictionary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadGlobalDictionary(int dicNo, const QString& dstFile);

    /*
    Method DownloadGlobalVariable

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadGlobalVariable(const QString& dstFile);

    /*
    Method DownloadInspect

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadInspect(int driveNo, int settingNo, const QString& dstFile);

    /*
    Method DownloadRecipe

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadRecipe(int driveNo, int settingNo, int recipeNo, const QString& dstFile);

    /*
    Method DownloadRegImage

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int DownloadRegImage(int driveNo, int settingNo, int cameraNo, int imageNo, const QString& dstFile);

    /*
    Method ExecuteCommand

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int ExecuteCommand(const QString& command, QString& response);

    /*
    Method ExecuteCommandAsync

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int ExecuteCommandAsync(const QString& command);

    /*
    Method GetDictionaryInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetDictionaryInfo(int index, int& dicNo);

    /*
    Method GetDictionaryList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetDictionaryList(int driveNo, int settingNo, int& num);

    /*
    Method GetFileInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetFileInfo(int index, QString& name, int& kind, int& attribute, QDateTime& date, int& size);

    /*
    Method GetFileList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetFileList(const QString& folder, int& num);

    /*
    Method GetGlobalDictionaryList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetGlobalDictionaryList(int& num);

    /*
    Method GetHistoryImage

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetHistoryImage(int conditionNo, int prcCount, const QString& varName, const QString& dstFile, int format);

    /*
    Method GetHistoryInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetHistoryInfo(int index, int& prcCount, QDateTime& date, int& isSavedDrive, int& isSavedComm);

    /*
    Method GetHistoryList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetHistoryList(int conditionNo, int& num);

    /*
    Method GetHistoryResult

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetHistoryResult(int conditionNo, int prcCount, const QString& dstFile);

    /*
    Method GetInspectInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetInspectInfo(int index, int& driveNo, int& settingNo, QString& name);

    /*
    Method GetInspectList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetInspectList(int& num);

    /*
    Method GetRecipeInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetRecipeInfo(int recipeIndex, int& recipeNo, QString& recipeName);

    /*
    Method GetRecipeList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetRecipeList(int driveNo, int settingNo, int& recipeNum);

    /*
    Method GetRegImageInfo

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetRegImageInfo(int index, int& imageNo);

    /*
    Method GetRegImageList

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetRegImageList(int driveNo, int settingNo, int cameraNo, int& num);

    /*
    Method GetResultLogData

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int GetResultLogData(int itemNo, int arrayNo, int memberNo, QString& text, double& data);

    /*
    Method Initialize

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int Initialize();

    /*
    Method SetResultLogUnit

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int SetResultLogUnit(int unitId);

    /*
    Method StartHistoryLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StartHistoryLog(const QString& folder);

    /*
    Method StartImageLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StartImageLog(const QString& folder);

    /*
    Method StartRemoteDesktop

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StartRemoteDesktop(int mode);

    /*
    Method StartResultLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StartResultLog(int mode, const QString& folder);

    /*
    Method StopHistoryLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StopHistoryLog();

    /*
    Method StopImageLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StopImageLog();

    /*
    Method StopRemoteDesktop

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StopRemoteDesktop();

    /*
    Method StopResultLog

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int StopResultLog();

    /*
    Method UpdateRemoteDesktop

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UpdateRemoteDesktop();

    /*
    Method UploadBinary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadBinary(int driveNo, int settingNo, const QString& srcPath);

    /*
    Method UploadDictionary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadDictionary(int driveNo, int settingNo, int dicNo, const QString& srcFile);

    /*
    Method UploadEnvironment

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadEnvironment(const QString& srcFile);

    /*
    Method UploadFile

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadFile(const QString& srcFile, const QString& dstFile);

    /*
    Method UploadGlobalDictionary

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadGlobalDictionary(int dicNo, const QString& srcFile);

    /*
    Method UploadGlobalVariable

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadGlobalVariable(const QString& srcFile, int overwriteMode);

    /*
    Method UploadInspect

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadInspect(int driveNo, int settingNo, const QString& srcFile, int overwriteMode);

    /*
    Method UploadRecipe

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadRecipe(int driveNo, int settingNo, int recipeNo, const QString& srcFile, int overwriteMode);

    /*
    Method UploadRegImage

    For more information, see help context 0 in C:\Windows\SysWow64\XGXCTL.hlp.
    */
    inline int UploadRegImage(int driveNo, int settingNo, int cameraNo, int imageNo, const QString& srcFile);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_XGXLIB_NOINLINES
inline QString _DXGX::Address() const
{
    QVariant qax_result = property("Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DXGX::SetAddress(const QString& value){ setProperty("Address", QVariant(value)); }

inline bool _DXGX::CommandBusy() const
{
    QVariant qax_result = property("CommandBusy");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _DXGX::Connected() const
{
    QVariant qax_result = property("Connected");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int _DXGX::ConnectionType() const
{
    QVariant qax_result = property("ConnectionType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetConnectionType(int value){ setProperty("ConnectionType", QVariant(value)); }

inline bool _DXGX::EnableRemoteConsole() const
{
    QVariant qax_result = property("EnableRemoteConsole");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DXGX::SetEnableRemoteConsole(bool value){ setProperty("EnableRemoteConsole", QVariant(value)); }

inline bool _DXGX::FileTransferBusy() const
{
    QVariant qax_result = property("FileTransferBusy");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _DXGX::HistoryLogStarted() const
{
    QVariant qax_result = property("HistoryLogStarted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _DXGX::HistoryTransferBusy() const
{
    QVariant qax_result = property("HistoryTransferBusy");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _DXGX::ImageLogStarted() const
{
    QVariant qax_result = property("ImageLogStarted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int _DXGX::Port() const
{
    QVariant qax_result = property("Port");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetPort(int value){ setProperty("Port", QVariant(value)); }

inline bool _DXGX::RemoteDesktopStarted() const
{
    QVariant qax_result = property("RemoteDesktopStarted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int _DXGX::RemoteJoypad0() const
{
    QVariant qax_result = property("RemoteJoypad0");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteJoypad0(int value){ setProperty("RemoteJoypad0", QVariant(value)); }

inline int _DXGX::RemoteJoypad1() const
{
    QVariant qax_result = property("RemoteJoypad1");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteJoypad1(int value){ setProperty("RemoteJoypad1", QVariant(value)); }

inline int _DXGX::RemoteJoypad2() const
{
    QVariant qax_result = property("RemoteJoypad2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteJoypad2(int value){ setProperty("RemoteJoypad2", QVariant(value)); }

inline int _DXGX::RemoteJoypad3() const
{
    QVariant qax_result = property("RemoteJoypad3");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteJoypad3(int value){ setProperty("RemoteJoypad3", QVariant(value)); }

inline int _DXGX::RemoteJoypad4() const
{
    QVariant qax_result = property("RemoteJoypad4");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteJoypad4(int value){ setProperty("RemoteJoypad4", QVariant(value)); }

inline int _DXGX::RemoteJoypad5() const
{
    QVariant qax_result = property("RemoteJoypad5");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteJoypad5(int value){ setProperty("RemoteJoypad5", QVariant(value)); }

inline int _DXGX::RemoteJoypad6() const
{
    QVariant qax_result = property("RemoteJoypad6");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteJoypad6(int value){ setProperty("RemoteJoypad6", QVariant(value)); }

inline int _DXGX::RemoteJoypad7() const
{
    QVariant qax_result = property("RemoteJoypad7");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteJoypad7(int value){ setProperty("RemoteJoypad7", QVariant(value)); }

inline int _DXGX::RemoteJoypad8() const
{
    QVariant qax_result = property("RemoteJoypad8");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteJoypad8(int value){ setProperty("RemoteJoypad8", QVariant(value)); }

inline int _DXGX::RemoteKey0() const
{
    QVariant qax_result = property("RemoteKey0");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteKey0(int value){ setProperty("RemoteKey0", QVariant(value)); }

inline int _DXGX::RemoteKey1() const
{
    QVariant qax_result = property("RemoteKey1");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteKey1(int value){ setProperty("RemoteKey1", QVariant(value)); }

inline int _DXGX::RemoteKey2() const
{
    QVariant qax_result = property("RemoteKey2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteKey2(int value){ setProperty("RemoteKey2", QVariant(value)); }

inline int _DXGX::RemoteKey3() const
{
    QVariant qax_result = property("RemoteKey3");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteKey3(int value){ setProperty("RemoteKey3", QVariant(value)); }

inline int _DXGX::RemoteKey4() const
{
    QVariant qax_result = property("RemoteKey4");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteKey4(int value){ setProperty("RemoteKey4", QVariant(value)); }

inline int _DXGX::RemoteKey5() const
{
    QVariant qax_result = property("RemoteKey5");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteKey5(int value){ setProperty("RemoteKey5", QVariant(value)); }

inline int _DXGX::RemoteKey6() const
{
    QVariant qax_result = property("RemoteKey6");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteKey6(int value){ setProperty("RemoteKey6", QVariant(value)); }

inline int _DXGX::RemoteKey7() const
{
    QVariant qax_result = property("RemoteKey7");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteKey7(int value){ setProperty("RemoteKey7", QVariant(value)); }

inline int _DXGX::RemoteKey8() const
{
    QVariant qax_result = property("RemoteKey8");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXGX::SetRemoteKey8(int value){ setProperty("RemoteKey8", QVariant(value)); }

inline bool _DXGX::ResultLogStarted() const
{
    QVariant qax_result = property("ResultLogStarted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _DXGX::SettingTransferBusy() const
{
    QVariant qax_result = property("SettingTransferBusy");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _DXGX::Version() const
{
    QVariant qax_result = property("Version");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline void _DXGX::AboutBox()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline int _DXGX::CaptureRemoteDesktop(const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _DXGX::ClearRemoteDesktop()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline int _DXGX::Connect()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int _DXGX::DeleteFile(const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _DXGX::Disconnect()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline int _DXGX::DownloadBinary(int driveNo, int settingNo, const QString& dstPath)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&dstPath};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int _DXGX::DownloadDictionary(int driveNo, int settingNo, int dicNo, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&dicNo, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int _DXGX::DownloadEnvironment(const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int _DXGX::DownloadFile(const QString& srcFile, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&srcFile, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int _DXGX::DownloadGlobalDictionary(int dicNo, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dicNo, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int _DXGX::DownloadGlobalVariable(const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int _DXGX::DownloadInspect(int driveNo, int settingNo, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int _DXGX::DownloadRecipe(int driveNo, int settingNo, int recipeNo, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&recipeNo, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int _DXGX::DownloadRegImage(int driveNo, int settingNo, int cameraNo, int imageNo, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&cameraNo, (void*)&imageNo, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int _DXGX::ExecuteCommand(const QString& command, QString& response)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&command, (void*)&response};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int _DXGX::ExecuteCommandAsync(const QString& command)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&command};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int _DXGX::GetDictionaryInfo(int index, int& dicNo)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&dicNo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int _DXGX::GetDictionaryList(int driveNo, int settingNo, int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int _DXGX::GetFileInfo(int index, QString& name, int& kind, int& attribute, QDateTime& date, int& size)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&name, (void*)&kind, (void*)&attribute, (void*)&date, (void*)&size};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int _DXGX::GetFileList(const QString& folder, int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&folder, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int _DXGX::GetGlobalDictionaryList(int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int _DXGX::GetHistoryImage(int conditionNo, int prcCount, const QString& varName, const QString& dstFile, int format)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&conditionNo, (void*)&prcCount, (void*)&varName, (void*)&dstFile, (void*)&format};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline int _DXGX::GetHistoryInfo(int index, int& prcCount, QDateTime& date, int& isSavedDrive, int& isSavedComm)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&prcCount, (void*)&date, (void*)&isSavedDrive, (void*)&isSavedComm};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline int _DXGX::GetHistoryList(int conditionNo, int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&conditionNo, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline int _DXGX::GetHistoryResult(int conditionNo, int prcCount, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&conditionNo, (void*)&prcCount, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline int _DXGX::GetInspectInfo(int index, int& driveNo, int& settingNo, QString& name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&driveNo, (void*)&settingNo, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int _DXGX::GetInspectList(int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int _DXGX::GetRecipeInfo(int recipeIndex, int& recipeNo, QString& recipeName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&recipeIndex, (void*)&recipeNo, (void*)&recipeName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int _DXGX::GetRecipeList(int driveNo, int settingNo, int& recipeNum)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&recipeNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int _DXGX::GetRegImageInfo(int index, int& imageNo)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&imageNo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int _DXGX::GetRegImageList(int driveNo, int settingNo, int cameraNo, int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&cameraNo, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int _DXGX::GetResultLogData(int itemNo, int arrayNo, int memberNo, QString& text, double& data)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&itemNo, (void*)&arrayNo, (void*)&memberNo, (void*)&text, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int _DXGX::Initialize()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int _DXGX::SetResultLogUnit(int unitId)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&unitId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline int _DXGX::StartHistoryLog(const QString& folder)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
    return qax_result;
}

inline int _DXGX::StartImageLog(const QString& folder)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline int _DXGX::StartRemoteDesktop(int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline int _DXGX::StartResultLog(int mode, const QString& folder)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mode, (void*)&folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline int _DXGX::StopHistoryLog()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline int _DXGX::StopImageLog()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
    return qax_result;
}

inline int _DXGX::StopRemoteDesktop()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline int _DXGX::StopResultLog()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
    return qax_result;
}

inline int _DXGX::UpdateRemoteDesktop()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
    return qax_result;
}

inline int _DXGX::UploadBinary(int driveNo, int settingNo, const QString& srcPath)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&srcPath};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline int _DXGX::UploadDictionary(int driveNo, int settingNo, int dicNo, const QString& srcFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&dicNo, (void*)&srcFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline int _DXGX::UploadEnvironment(const QString& srcFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&srcFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline int _DXGX::UploadFile(const QString& srcFile, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&srcFile, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
    return qax_result;
}

inline int _DXGX::UploadGlobalDictionary(int dicNo, const QString& srcFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dicNo, (void*)&srcFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
    return qax_result;
}

inline int _DXGX::UploadGlobalVariable(const QString& srcFile, int overwriteMode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&srcFile, (void*)&overwriteMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
    return qax_result;
}

inline int _DXGX::UploadInspect(int driveNo, int settingNo, const QString& srcFile, int overwriteMode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&srcFile, (void*)&overwriteMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
    return qax_result;
}

inline int _DXGX::UploadRecipe(int driveNo, int settingNo, int recipeNo, const QString& srcFile, int overwriteMode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&recipeNo, (void*)&srcFile, (void*)&overwriteMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
    return qax_result;
}

inline int _DXGX::UploadRegImage(int driveNo, int settingNo, int cameraNo, int imageNo, const QString& srcFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&cameraNo, (void*)&imageNo, (void*)&srcFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
    return qax_result;
}


inline QString XGX::Address() const
{
    QVariant qax_result = property("Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void XGX::SetAddress(const QString& value){ setProperty("Address", QVariant(value)); }

inline bool XGX::CommandBusy() const
{
    QVariant qax_result = property("CommandBusy");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool XGX::Connected() const
{
    QVariant qax_result = property("Connected");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int XGX::ConnectionType() const
{
    QVariant qax_result = property("ConnectionType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetConnectionType(int value){ setProperty("ConnectionType", QVariant(value)); }

inline bool XGX::EnableRemoteConsole() const
{
    QVariant qax_result = property("EnableRemoteConsole");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void XGX::SetEnableRemoteConsole(bool value){ setProperty("EnableRemoteConsole", QVariant(value)); }

inline bool XGX::FileTransferBusy() const
{
    QVariant qax_result = property("FileTransferBusy");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool XGX::HistoryLogStarted() const
{
    QVariant qax_result = property("HistoryLogStarted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool XGX::HistoryTransferBusy() const
{
    QVariant qax_result = property("HistoryTransferBusy");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool XGX::ImageLogStarted() const
{
    QVariant qax_result = property("ImageLogStarted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int XGX::Port() const
{
    QVariant qax_result = property("Port");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetPort(int value){ setProperty("Port", QVariant(value)); }

inline bool XGX::RemoteDesktopStarted() const
{
    QVariant qax_result = property("RemoteDesktopStarted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int XGX::RemoteJoypad0() const
{
    QVariant qax_result = property("RemoteJoypad0");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteJoypad0(int value){ setProperty("RemoteJoypad0", QVariant(value)); }

inline int XGX::RemoteJoypad1() const
{
    QVariant qax_result = property("RemoteJoypad1");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteJoypad1(int value){ setProperty("RemoteJoypad1", QVariant(value)); }

inline int XGX::RemoteJoypad2() const
{
    QVariant qax_result = property("RemoteJoypad2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteJoypad2(int value){ setProperty("RemoteJoypad2", QVariant(value)); }

inline int XGX::RemoteJoypad3() const
{
    QVariant qax_result = property("RemoteJoypad3");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteJoypad3(int value){ setProperty("RemoteJoypad3", QVariant(value)); }

inline int XGX::RemoteJoypad4() const
{
    QVariant qax_result = property("RemoteJoypad4");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteJoypad4(int value){ setProperty("RemoteJoypad4", QVariant(value)); }

inline int XGX::RemoteJoypad5() const
{
    QVariant qax_result = property("RemoteJoypad5");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteJoypad5(int value){ setProperty("RemoteJoypad5", QVariant(value)); }

inline int XGX::RemoteJoypad6() const
{
    QVariant qax_result = property("RemoteJoypad6");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteJoypad6(int value){ setProperty("RemoteJoypad6", QVariant(value)); }

inline int XGX::RemoteJoypad7() const
{
    QVariant qax_result = property("RemoteJoypad7");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteJoypad7(int value){ setProperty("RemoteJoypad7", QVariant(value)); }

inline int XGX::RemoteJoypad8() const
{
    QVariant qax_result = property("RemoteJoypad8");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteJoypad8(int value){ setProperty("RemoteJoypad8", QVariant(value)); }

inline int XGX::RemoteKey0() const
{
    QVariant qax_result = property("RemoteKey0");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteKey0(int value){ setProperty("RemoteKey0", QVariant(value)); }

inline int XGX::RemoteKey1() const
{
    QVariant qax_result = property("RemoteKey1");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteKey1(int value){ setProperty("RemoteKey1", QVariant(value)); }

inline int XGX::RemoteKey2() const
{
    QVariant qax_result = property("RemoteKey2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteKey2(int value){ setProperty("RemoteKey2", QVariant(value)); }

inline int XGX::RemoteKey3() const
{
    QVariant qax_result = property("RemoteKey3");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteKey3(int value){ setProperty("RemoteKey3", QVariant(value)); }

inline int XGX::RemoteKey4() const
{
    QVariant qax_result = property("RemoteKey4");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteKey4(int value){ setProperty("RemoteKey4", QVariant(value)); }

inline int XGX::RemoteKey5() const
{
    QVariant qax_result = property("RemoteKey5");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteKey5(int value){ setProperty("RemoteKey5", QVariant(value)); }

inline int XGX::RemoteKey6() const
{
    QVariant qax_result = property("RemoteKey6");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteKey6(int value){ setProperty("RemoteKey6", QVariant(value)); }

inline int XGX::RemoteKey7() const
{
    QVariant qax_result = property("RemoteKey7");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteKey7(int value){ setProperty("RemoteKey7", QVariant(value)); }

inline int XGX::RemoteKey8() const
{
    QVariant qax_result = property("RemoteKey8");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XGX::SetRemoteKey8(int value){ setProperty("RemoteKey8", QVariant(value)); }

inline bool XGX::ResultLogStarted() const
{
    QVariant qax_result = property("ResultLogStarted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool XGX::SettingTransferBusy() const
{
    QVariant qax_result = property("SettingTransferBusy");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString XGX::Version() const
{
    QVariant qax_result = property("Version");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline void XGX::AboutBox()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline int XGX::CaptureRemoteDesktop(const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline void XGX::ClearRemoteDesktop()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
}

inline int XGX::Connect()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline int XGX::DeleteFile(const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline void XGX::Disconnect()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
}

inline int XGX::DownloadBinary(int driveNo, int settingNo, const QString& dstPath)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&dstPath};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline int XGX::DownloadDictionary(int driveNo, int settingNo, int dicNo, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&dicNo, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline int XGX::DownloadEnvironment(const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline int XGX::DownloadFile(const QString& srcFile, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&srcFile, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline int XGX::DownloadGlobalDictionary(int dicNo, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dicNo, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline int XGX::DownloadGlobalVariable(const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline int XGX::DownloadInspect(int driveNo, int settingNo, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
    return qax_result;
}

inline int XGX::DownloadRecipe(int driveNo, int settingNo, int recipeNo, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&recipeNo, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline int XGX::DownloadRegImage(int driveNo, int settingNo, int cameraNo, int imageNo, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&cameraNo, (void*)&imageNo, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline int XGX::ExecuteCommand(const QString& command, QString& response)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&command, (void*)&response};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline int XGX::ExecuteCommandAsync(const QString& command)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&command};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline int XGX::GetDictionaryInfo(int index, int& dicNo)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&dicNo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
    return qax_result;
}

inline int XGX::GetDictionaryList(int driveNo, int settingNo, int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline int XGX::GetFileInfo(int index, QString& name, int& kind, int& attribute, QDateTime& date, int& size)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&name, (void*)&kind, (void*)&attribute, (void*)&date, (void*)&size};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
    return qax_result;
}

inline int XGX::GetFileList(const QString& folder, int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&folder, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
    return qax_result;
}

inline int XGX::GetGlobalDictionaryList(int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline int XGX::GetHistoryImage(int conditionNo, int prcCount, const QString& varName, const QString& dstFile, int format)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&conditionNo, (void*)&prcCount, (void*)&varName, (void*)&dstFile, (void*)&format};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline int XGX::GetHistoryInfo(int index, int& prcCount, QDateTime& date, int& isSavedDrive, int& isSavedComm)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&prcCount, (void*)&date, (void*)&isSavedDrive, (void*)&isSavedComm};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline int XGX::GetHistoryList(int conditionNo, int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&conditionNo, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
    return qax_result;
}

inline int XGX::GetHistoryResult(int conditionNo, int prcCount, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&conditionNo, (void*)&prcCount, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
    return qax_result;
}

inline int XGX::GetInspectInfo(int index, int& driveNo, int& settingNo, QString& name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&driveNo, (void*)&settingNo, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
    return qax_result;
}

inline int XGX::GetInspectList(int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
    return qax_result;
}

inline int XGX::GetRecipeInfo(int recipeIndex, int& recipeNo, QString& recipeName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&recipeIndex, (void*)&recipeNo, (void*)&recipeName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
    return qax_result;
}

inline int XGX::GetRecipeList(int driveNo, int settingNo, int& recipeNum)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&recipeNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
    return qax_result;
}

inline int XGX::GetRegImageInfo(int index, int& imageNo)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&imageNo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 83, _a);
    return qax_result;
}

inline int XGX::GetRegImageList(int driveNo, int settingNo, int cameraNo, int& num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&cameraNo, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 84, _a);
    return qax_result;
}

inline int XGX::GetResultLogData(int itemNo, int arrayNo, int memberNo, QString& text, double& data)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&itemNo, (void*)&arrayNo, (void*)&memberNo, (void*)&text, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 85, _a);
    return qax_result;
}

inline int XGX::Initialize()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
    return qax_result;
}

inline int XGX::SetResultLogUnit(int unitId)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&unitId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 109, _a);
    return qax_result;
}

inline int XGX::StartHistoryLog(const QString& folder)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 110, _a);
    return qax_result;
}

inline int XGX::StartImageLog(const QString& folder)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 111, _a);
    return qax_result;
}

inline int XGX::StartRemoteDesktop(int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 112, _a);
    return qax_result;
}

inline int XGX::StartResultLog(int mode, const QString& folder)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mode, (void*)&folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 113, _a);
    return qax_result;
}

inline int XGX::StopHistoryLog()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 114, _a);
    return qax_result;
}

inline int XGX::StopImageLog()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 115, _a);
    return qax_result;
}

inline int XGX::StopRemoteDesktop()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 116, _a);
    return qax_result;
}

inline int XGX::StopResultLog()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 117, _a);
    return qax_result;
}

inline int XGX::UpdateRemoteDesktop()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 118, _a);
    return qax_result;
}

inline int XGX::UploadBinary(int driveNo, int settingNo, const QString& srcPath)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&srcPath};
    qt_metacall(QMetaObject::InvokeMetaMethod, 119, _a);
    return qax_result;
}

inline int XGX::UploadDictionary(int driveNo, int settingNo, int dicNo, const QString& srcFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&dicNo, (void*)&srcFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 120, _a);
    return qax_result;
}

inline int XGX::UploadEnvironment(const QString& srcFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&srcFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 121, _a);
    return qax_result;
}

inline int XGX::UploadFile(const QString& srcFile, const QString& dstFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&srcFile, (void*)&dstFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 122, _a);
    return qax_result;
}

inline int XGX::UploadGlobalDictionary(int dicNo, const QString& srcFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dicNo, (void*)&srcFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 123, _a);
    return qax_result;
}

inline int XGX::UploadGlobalVariable(const QString& srcFile, int overwriteMode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&srcFile, (void*)&overwriteMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 124, _a);
    return qax_result;
}

inline int XGX::UploadInspect(int driveNo, int settingNo, const QString& srcFile, int overwriteMode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&srcFile, (void*)&overwriteMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 125, _a);
    return qax_result;
}

inline int XGX::UploadRecipe(int driveNo, int settingNo, int recipeNo, const QString& srcFile, int overwriteMode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&recipeNo, (void*)&srcFile, (void*)&overwriteMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 126, _a);
    return qax_result;
}

inline int XGX::UploadRegImage(int driveNo, int settingNo, int cameraNo, int imageNo, const QString& srcFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&driveNo, (void*)&settingNo, (void*)&cameraNo, (void*)&imageNo, (void*)&srcFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 127, _a);
    return qax_result;
}



#endif

}

QT_BEGIN_NAMESPACE

namespace QtMetaTypePrivate {
template<>
struct QMetaTypeFunctionHelper<XGXLib::_DXGX, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<XGXLib::_DXGX*>(t)->XGXLib::_DXGX::~_DXGX();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) XGXLib::_DXGX;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const XGXLib::_DXGX*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<XGXLib::_DXGX*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<XGXLib::XGX, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<XGXLib::XGX*>(t)->XGXLib::XGX::~XGX();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) XGXLib::XGX;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const XGXLib::XGX*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<XGXLib::XGX*>(t); }
#endif // QT_NO_DATASTREAM
};

} // namespace QtMetaTypePrivate
QT_END_NAMESPACE

#endif

